digraph sliq_copa2_onrttupdate {
    redy [ shape = ellipse, label = "Ready" ];
    blk1 [ shape = box,     label = "Set min_rtt = rtt" ];
    blk2 [ shape = box,     label = "Set min_rtt_tracking.recent_min_rtt = rtt" ];
    blk3 [ shape = box,     label = "Set last_rtt = rtt" ];
    blk4 [ shape = box,     label = "Do UpdateVelocity state machine" ];
    blk5 [ shape = box,     label = "Do UpdateMinRttTracking(ack_time) state machine\nSet rtt_period_end_time = ack_time + rtt" ];
    blk6 [ shape = box,     label = "Set queueing_delay = rtt - min_rtt" ];
    blk7 [ shape = box,     label = "Set damper.state = MONITOR_LOW" ];
    blk8 [ shape = box,     label = "Set damper.state = HOLD\nSet damper.hold_cnt = 0\nSet cwnd = cc_val\nSet velocity = 1\nSet cwnd_adj_up = 0\nSet cwnd_adj_down = 0\nSet vel_prev_direction = DIR_NEITHER" ];
    blk9 [ shape = box,     label = "Set lambda_target = (1.0 / (delta * queueing_delay))\nSet lambda = (cwnd / rtt)\nSet velocity = min(velocity, (delta * cwnd))\nSet velocity = max(velocity, 1)\nSet cwnd_adj = ((bytes * velocity) / ((NPS - DATA_HDR_BASE_SIZE) * delta * cwnd))" ];
    blk10 [ shape = box,     label = "Set cwnd = cwnd + cwnd_adj" ];
    blk11 [ shape = box,     label = "Set cwnd = cwnd - cwnd_adj" ];
    blk12 [ shape = box,     label = "Set cwnd = max(cwnd, MIN_CWND)\nSet ist = (last_rtt / cwnd)\n" ];
    dsc1 [ shape = diamond, label = "Is state == CLOSED_LOOP?" ];
    dsc2 [ shape = diamond, label = "Is rtt < min_rtt?" ];
    dsc3 [ shape = diamond, label = "Is rtt < min_rtt_tracking.recent_min_rtt?" ];
    dsc4 [ shape = diamond, label = "Is cc_seq > vel_cc_seq?" ];
    dsc5 [ shape = diamond, label = "Is ack_time > rtt_period_end_time?" ];
    dsc6 [ shape = diamond, label = "Is damper.state == MONITOR_HIGH?" ];
    dsc7 [ shape = diamond, label = "Is (queueing_delay / ist) > DAMPER_THRES?" ];
    dsc8 [ shape = diamond, label = "Is damper.state == MONITOR_LOW?" ];
    dsc9 [ shape = diamond, label = "Is (queueing_delay / ist) < (1.0 / delta)?" ];
    dsc10 [ shape = diamond, label = "Is damper.state != HOLD?" ];
    dsc11 [ shape = diamond, label = "Is lambda <= lambda_target?" ];
    dsc12 [ shape = diamond, label = "Is (bif / (NPS + DATA_HDR_BASE_SIZE)) >= (0.5 * cwnd)?" ];

    redy -> dsc1 [ label = "OnRttUpdate(ack_time, snd_ts, rcv_ts,\nseq, cc_seq, rtt, bytes, cc_val)" ];
    dsc1 -> dsc2 [ label = "Yes" ];
    dsc1 -> redy [ label = "No" ];
    dsc2 -> blk1 [ label = "Yes" ];
    dsc2 -> dsc3 [ label = "No" ];
    blk1 -> dsc3;
    dsc3 -> blk2 [ label = "Yes" ];
    dsc3 -> blk3 [ label = "No" ];
    blk2 -> blk3;
    blk3 -> dsc4;
    dsc4 -> blk4 [ label = "Yes" ];
    dsc4 -> dsc5 [ label = "No" ];
    blk4 -> dsc5;
    dsc5 -> blk5 [ label = "Yes" ];
    dsc5 -> blk6 [ label = "No" ];
    blk5 -> blk6;
    blk6 -> dsc6;
    dsc6 -> dsc7 [ label = "Yes" ];
    dsc6 -> dsc8 [ label = "No" ];
    dsc7 -> blk7 [ label = "Yes" ];
    dsc7 -> blk9 [ label = "No" ];
    blk7 -> blk9;
    dsc8 -> dsc9 [ label = "Yes" ];
    dsc8 -> blk9 [ label = "No" ];
    dsc9 -> blk8 [ label = "Yes" ];
    dsc9 -> blk9 [ label = "No" ];
    blk8 -> blk9;
    blk9 -> dsc10;
    dsc10 -> dsc11 [ label = "Yes" ];
    dsc10 -> blk12 [ label = "No" ];
    dsc11 -> dsc12 [ label = "Yes" ];
    dsc11 -> blk11 [ label = "No" ];
    dsc12 -> blk10 [ label = "Yes" ];
    dsc12 -> blk12 [ label = "No" ];
    blk10 -> blk12;
    blk11 -> blk12;
    blk12 -> redy;
}
